@mixin flex-middle {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin card-size($size) {
    $sizes: map-get($card-sizes, $size);
    @if $sizes {
        min-width: map-get($sizes, min-width);
        min-height: map-get($sizes, min-height);
        width: map-get($sizes, width);
        height: map-get($sizes, height);

        &::before {
            font-size: map-get($sizes, font-base) * 2;
        }
    }
}

@mixin animation-transition(){
    -webkit-transition-timing-function: ease-in-out;
    animation-timing-function: ease-in-out;
    -webkit-animation-duration: 0.4s;
    animation-duration: 0.4s;
}
@mixin color-transition{
    -webkit-transition-timing-function: ease-in-out;
    transition-timing-function: ease-in-out;
    -webkit-transition-duration: .2s;
    transition-duration: .2s;
    -webkit-transition-property: color, border-color, background-color;
    transition-property: color, border-color, background-color;
}


@mixin opacity-transition{
    -webkit-transition-timing-function: ease-in-out;
    transition-timing-function: ease-in-out;
    -webkit-transition-duration: .6s;
    transition-duration: .6s;
    -webkit-transition-property: opacity;
    transition-property: opacity;
}


@mixin height-transition{
    -webkit-transition-timing-function: ease-in-out;
    transition-timing-function: ease-in-out;
    -webkit-transition-duration: 1s;
    transition-duration: 1s;
    -webkit-transition-property: height;
    transition-property: height;
}

@mixin position-transition{
    -webkit-transition-timing-function: ease-in-out;
    transition-timing-function: ease-in-out;
    -webkit-transition-duration: 0.0s;
    transition-duration: 0.4s;
    -webkit-transition-property: top, left, right, bottom;
    transition-property: top, left, right, bottom;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin rounded($radius: 0.5em) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}